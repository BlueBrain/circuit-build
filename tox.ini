[base]
name = circuit_build
testdeps =
    numpy>=1.14
    pandas>=0.24
    voxcell>=2.7.0
    h5py
    pytest

[tox]
minversion = 3.1.0
# ignore basepython for envs that already specify a version
ignore_basepython_conflict = true

[testenv]
# We have to use python3.8 because `module load unstable` bring only this version.
# We have to be ready to update it to 3.9 when `unstable` changes the default python version.
basepython=python3.8
deps = {[base]testdeps}
install_command=pip install --index-url=https://bbpteam.epfl.ch/repository/devpi/simple {opts} {packages}
# use -s to print the output and show more information
commands = pytest -sv tests {posargs}
setenv =
    # set to "true" during tests to redirect logs to stderr instead of files
    LOG_ALL_TO_STDERR = true
passenv =
    # pass the module variables to make "module purge" work as expected
    MODULESHOME
    MODULEPATH
    LOADEDMODULES
    _LMFILES_

[testenv:docs]
changedir = doc
deps =
    sphinx
    sphinx-bluebrain-theme
    sphinx-jsonschema
    snakemake
commands =
    # rebuild the the dot images used in the documentation
    make -f Makefile_dag
    # set warnings as errors using the -W sphinx option
    make html SPHINXOPTS=-W
whitelist_externals = make

[testenv:check-version]
skip_install = true
deps = bbp-nse-ci
commands_pre =
commands = do_release.py -p . check-version

[testenv:dag]
changedir = doc
deps = snakemake
whitelist_externals = make
commands = make -f Makefile_dag

[testenv:lint]
deps =
    black==20.8b1
    isort
    snakefmt
commands =
    isort --check-only --diff {[base]name}
    black -l 100 --check {[base]name}/snakemake/utils.py
    snakefmt -l 100 --check {[base]name}/snakemake/Snakefile

[testenv:format]
deps =
    black==20.8b1
    isort
    snakefmt
commands =
    isort {[base]name}
    black -l 100 {[base]name}/snakemake/utils.py
    snakefmt -l 100 {[base]name}/snakemake/Snakefile
