[base]
name = circuit_build
testdeps =
    numpy>=1.14
    pandas>=0.24
    voxcell>=2.7.0
    nose
    mock

minversion = 3.1.0

# ignore basepython for envs that already specify a version
ignore_basepython_conflict = true

[testenv]
# We have to use python3.7 because `module load unstable` bring only this version.
# We have to be ready to update it to 3.8 when `unstable` changes the default python version.
basepython=python3.7
deps = {[base]testdeps}
install_command=pip install --index-url=https://bbpteam.epfl.ch/repository/devpi/simple {opts} {packages}
commands = nosetests tests

[testenv:docs]
changedir = doc
deps =
    sphinx
    sphinx-bluebrain-theme
# set warnings as errors using the -W sphinx option
commands = make html SPHINXOPTS=-W
whitelist_externals = make

[testenv:check-version]
skip_install = true
deps = bbp-nse-ci
commands_pre =
commands = do_release.py -p . check-version

[testenv:dag]
whitelist_externals =
    bash
    mkdir
bioname = tests/proj66-tiny/
sm = snakemake --snakefile snakemake/Snakefile --config bioname={[testenv:dag]bioname} --dag --
commands =
    mkdir -p subcellular  # needed for subcellular rule
    bash -c \'{[testenv:dag]sm} default >doc/source/dag/default.dot'
    bash -c \'{[testenv:dag]sm} functional >doc/source/dag/functional.dot'
    bash -c \'{[testenv:dag]sm} spatial_index_segment >doc/source/dag/spatial_index_segment.dot'
    bash -c \'{[testenv:dag]sm} spatial_index_synapse >doc/source/dag/spatial_index_synapse.dot'
    bash -c \'{[testenv:dag]sm} structural >doc/source/dag/structural.dot'
    bash -c \'{[testenv:dag]sm} subcellular >doc/source/dag/subcellular.dot'
    bash -c \'{[testenv:dag]sm} functional_all >doc/source/dag/functional_all.dot'
